{"version":3,"sources":["styles/global.ts","components/Header/SettingsModal/styles.ts","components/Header/SettingsModal/index.tsx","components/Header/styles.ts","components/Header/index.tsx","components/Timer/styles.ts","components/Timer/index.tsx","assets/dev-ilustration.svg","pages/Home/styles.ts","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","Container","styled","div","props","isOpen","SettingsModal","setTimerOptions","timerOptions","useState","pomodoro","setPomodoro","shortBreak","setShortBreak","longBreak","setLongBreak","handleSaveSettings","useCallback","newOptions","map","item","name","minutes","localStorage","setItem","JSON","stringify","type","value","onChange","e","Number","target","onClick","header","Content","SettingsContainer","Header","modalIsActive","setModalIsActive","toggleModalActive","state","size","color","TimerMenu","TimerMenuItem","button","selected","Timer","setMinutes","seconds","setSeconds","started","setIsStarted","running","setIsRunnig","selectedOption","setSelectedOption","a","Notification","alert","permission","requestPermission","useEffect","handleNotificationRequest","icon","body","minutesInterval","setInterval","clearInterval","secondsInterval","option","find","_","index","currentMinutes","useMemo","optionIndex","String","padStart","DetailsSection","devIlustration","DetailsSectionHeader","Home","loadedSettings","getItem","parse","href","Routes","path","exact","component","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a767626.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    color: #FFF;\n    -webkit-font-smoothing: antialised;\n  }\n\n  body, input, button {\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div<{ isOpen: Boolean }>`\n  display: ${props => (props.isOpen ? 'block' : 'none')};\n  position: absolute;\n  top: 70px;\n  right: 30px;\n  background: #fff;\n  color: #000;\n  padding: 25px;\n  transition: all 0.2s;\n  border-radius: 8px;\n\n  p {\n    font-size: 16px;\n    font-weight: bold;\n  }\n\n  label {\n    margin: 20px 0;\n    display: flex;\n    flex-direction: column;\n\n    input {\n      background: #efefef;\n      padding: 5px;\n      border: 0;\n      border-radius: 5px;\n      margin-top: 5px;\n    }\n  }\n\n  button {\n    width: 100%;\n    padding: 5px 15px;\n    border: 0;\n    background: #36363b;\n    color: #fff;\n    border-radius: 5px;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\n\nimport { Container } from './styles';\n\nexport interface SettingsModalProps {\n  isOpen: Boolean;\n  setTimerOptions: Function;\n  timerOptions: Array<{ name: string; minutes: number }>;\n}\n\ninterface SettingsItemProps {\n  name: string;\n  minutes: number;\n}\n\nconst SettingsModal: React.FC<SettingsModalProps> = ({\n  isOpen,\n  setTimerOptions,\n  timerOptions,\n}) => {\n  const [pomodoro, setPomodoro] = useState(25);\n  const [shortBreak, setShortBreak] = useState(5);\n  const [longBreak, setLongBreak] = useState(15);\n\n  const handleSaveSettings = useCallback(() => {\n    const newOptions = timerOptions.map((item: SettingsItemProps) => {\n      if (item.name === 'Pomodoro') {\n        return {\n          name: item.name,\n          minutes: pomodoro,\n        };\n      }\n\n      if (item.name === 'Short Break') {\n        return {\n          name: item.name,\n          minutes: shortBreak,\n        };\n      }\n\n      if (item.name === 'Long Break') {\n        return {\n          name: item.name,\n          minutes: longBreak,\n        };\n      }\n\n      return item;\n    });\n\n    localStorage.setItem('@devfocus/timerSettings', JSON.stringify(newOptions));\n\n    setTimerOptions(newOptions);\n  }, [setTimerOptions, pomodoro, shortBreak, longBreak, timerOptions]);\n\n  return (\n    <Container isOpen={isOpen}>\n      <p>Timer Setting</p>\n\n      <label>\n        Pomodoro\n        <input\n          type=\"number\"\n          value={pomodoro}\n          onChange={e => setPomodoro(Number(e.target.value))}\n        />\n      </label>\n\n      <label>\n        Short Break\n        <input\n          type=\"number\"\n          value={shortBreak}\n          onChange={e => setShortBreak(Number(e.target.value))}\n        />\n      </label>\n\n      <label>\n        Long Break\n        <input\n          type=\"number\"\n          value={longBreak}\n          onChange={e => setLongBreak(Number(e.target.value))}\n        />\n      </label>\n\n      <button onClick={handleSaveSettings} type=\"button\">\n        Salvar\n      </button>\n    </Container>\n  );\n};\n\nexport default SettingsModal;\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  display: flex;\n  height: 72px;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: #202024;\n\n  h1 {\n    strong {\n      margin: 0 8px;\n    }\n    span {\n      font-weight: lighter;\n      color: #05f4b7;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1280px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nexport const SettingsContainer = styled.div`\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  svg {\n    margin-right: 10px;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { MdSettings } from 'react-icons/md';\nimport SettingsModal from './SettingsModal';\n\nimport { Container, Content, SettingsContainer } from './styles';\n\nexport interface TimerProps {\n  setTimerOptions: Function;\n  timerOptions: Array<{ name: string; minutes: number }>;\n}\n\nconst Header: React.FC<TimerProps> = ({ setTimerOptions, timerOptions }) => {\n  const [modalIsActive, setModalIsActive] = useState(false);\n\n  const toggleModalActive = useCallback(() => {\n    setModalIsActive(state => !state);\n  }, []);\n\n  return (\n    <Container>\n      <Content>\n        <h1>\n          <span>&lt;</span>\n          <strong>focus</strong>\n          <span> /&gt;</span>\n        </h1>\n\n        <SettingsContainer onClick={toggleModalActive}>\n          <MdSettings size={30} color=\"#FFF\" />\n        </SettingsContainer>\n\n        <SettingsModal\n          isOpen={modalIsActive}\n          setTimerOptions={setTimerOptions}\n          timerOptions={timerOptions}\n        />\n      </Content>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\ninterface ITimerMenuItem {\n  selected?: Boolean;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n  max-width: 480px;\n  max-height: 360px;\n  width: 100%;\n  background: rgba(108, 108, 112, 0.3);\n  border-radius: 10px;\n\n  span {\n    font-size: 120px;\n  }\n\n  > button {\n    width: 200px;\n    margin-top: 25px;\n    padding: 15px;\n    width: 200px;\n    border-radius: 8px;\n    font-weight: bold;\n  }\n`;\n\nexport const TimerMenu = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 40px;\n`;\n\nexport const TimerMenuItem = styled.button<ITimerMenuItem>`\n  border: 0;\n  box-shadow: 0;\n  padding: 8px 15px;\n  color: #fff;\n  transition: background 0.2s;\n  & + button {\n    margin: 0 5px;\n  }\n  font-weight: ${props => (props.selected ? '700' : '500')};\n  border-radius: 4px;\n  background: ${props => (props.selected ? 'rgba(0, 0, 0, 0.15)' : 'none')};\n`;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { Container, TimerMenu, TimerMenuItem } from './styles';\n\ninterface TimerProps {\n  timerOptions: Array<{ name: string; minutes: number }>;\n}\n\nconst Timer: React.FC<TimerProps> = ({ timerOptions }) => {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [started, setIsStarted] = useState(false);\n  const [running, setIsRunnig] = useState(false);\n\n  const [selectedOption, setSelectedOption] = useState(0);\n\n  async function handleNotificationRequest() {\n    if (!Notification) {\n      // eslint-disable-next-line\n      alert('Esse browser não suporta notificações desktop');\n    }\n    if (Notification.permission !== 'granted') {\n      Notification.requestPermission();\n    }\n  }\n\n  useEffect(() => {\n    if (running) {\n      handleNotificationRequest();\n      // if seconds get to 0, down minute\n      if (!seconds && !minutes) {\n        setIsRunnig(false);\n        const notification = new Notification('Your time is over', {\n          icon:\n            'https://i.pinimg.com/originals/00/cc/b6/00ccb6f59d1215f5666ad229af120e9f.png',\n          body: 'get some coffe...',\n        });\n\n        setMinutes(25);\n      }\n\n      if (!seconds) {\n        // if minutes get to 0 don't do nothing\n        // if (!minutes) return;\n        if (!minutes) {\n          return;\n        }\n\n        const minutesInterval = setInterval(() => {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        }, 1000);\n\n        return () => clearInterval(minutesInterval);\n      }\n\n      const secondsInterval = setInterval(() => {\n        setSeconds(seconds - 1);\n      }, 1000);\n\n      return () => clearInterval(secondsInterval);\n    }\n  }, [seconds, running, minutes]);\n\n  const controlsCountdown = () => {\n    if (started === false) {\n      setMinutes(state => state - 1);\n      setSeconds(59);\n      setIsStarted(true);\n    }\n    setIsRunnig(state => !state);\n  };\n\n  useEffect(() => {\n    const option = timerOptions.find((_, index) => index === selectedOption);\n\n    if (option) {\n      setMinutes(option.minutes);\n      setSeconds(0);\n      setIsRunnig(false);\n    }\n  }, [selectedOption, timerOptions]);\n\n  const currentMinutes = useMemo(() => {\n    return timerOptions[selectedOption].minutes;\n  }, [selectedOption, timerOptions]);\n\n  return (\n    <Container>\n      <TimerMenu>\n        {timerOptions.map((option, optionIndex) => (\n          <TimerMenuItem\n            key={option.name}\n            selected={optionIndex === selectedOption}\n            onClick={() => setSelectedOption(optionIndex)}\n          >\n            {option.name}\n          </TimerMenuItem>\n        ))}\n      </TimerMenu>\n      <span>\n        {String(minutes).padStart(2, '0')}:{String(seconds).padStart(2, '0')}\n      </span>\n      <button type=\"button\" onClick={controlsCountdown}>\n        {!running && minutes === currentMinutes && 'START'}\n        {running && 'PAUSE'}\n        {running === false && minutes < currentMinutes && 'RESUME'}\n      </button>\n    </Container>\n  );\n};\n\nexport default Timer;\n","export default __webpack_public_path__ + \"static/media/dev-ilustration.544f3d09.svg\";","import styled from 'styled-components';\nimport devIlustration from '../../assets/dev-ilustration.svg';\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: #202024;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const DetailsSection = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 600px;\n  flex-direction: column;\n  margin-top: 72px;\n  max-width: 1280px;\n  padding: 0 40px;\n  background-image: url(${devIlustration});\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: bottom right;\n`;\n\nexport const DetailsSectionHeader = styled.div`\n  width: 100%;\n  max-width: 50%;\n  color: #202024;\n\n  @media (max-width: 840px) {\n    max-width: 100%;\n  }\n\n  h1 {\n    margin-bottom: 20px;\n  }\n\n  h2 {\n    margin: 40px 0 20px 0;\n    color: #6a6a71;\n  }\n\n  p {\n    color: #6a6a71;\n    text-align: justify;\n    font-size: 16px;\n    margin-bottom: 40px;\n  }\n\n  > a {\n    width: 100%;\n    max-width: 200px;\n    padding: 15px 25px;\n    font-size: 16px;\n    border: 0;\n    border-radius: 10px;\n    background: #05f4b7;\n    color: #fff;\n    font-weight: 700;\n\n    &:hover {\n      background: #06ce9c;\n    }\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport Header from '../../components/Header';\nimport Timer from '../../components/Timer';\nimport {\n  Container,\n  Content,\n  DetailsSection,\n  DetailsSectionHeader,\n} from './styles';\n\nconst Home: React.FC = () => {\n  const loadedSettings = localStorage.getItem('@devfocus/timerSettings');\n\n  // useEffect(() => {\n  //   const loadedSettings = localStorage.getItem('@devfocus/timerSettings');\n\n  //   if (loadedSettings) {\n  //     setTimerOptions(JSON.parse(loadedSettings));\n  //   }\n  // }, []);\n\n  const [timerOptions, setTimerOptions] = useState(() => {\n    if (loadedSettings) {\n      return JSON.parse(loadedSettings);\n    }\n    return [\n      {\n        name: 'Pomodoro',\n        minutes: 25,\n      },\n      {\n        name: 'Short Break',\n        minutes: 5,\n      },\n      {\n        name: 'Long Break',\n        minutes: 15,\n      },\n    ];\n  });\n  return (\n    <Container>\n      <Header setTimerOptions={setTimerOptions} timerOptions={timerOptions} />\n      <Content>\n        <Timer timerOptions={timerOptions} />\n      </Content>\n\n      <DetailsSection>\n        <DetailsSectionHeader>\n          <h1>Online Pomodoro Timer to boost your productivity</h1>\n          <h2>What is Pomodoro Technique?</h2>\n          <p>\n            The Pomodoro Technique is created by Francesco Cirillo for a more\n            productive way to work and study. The technique uses a timer to\n            break down work into intervals, traditionally 25 minutes in length,\n            separated by short breaks. Each interval is known as a pomodoro,\n            from the Italian word for tomato, after the tomato-shaped kitchen\n            timer that Cirillo used as a university student.\n          </p>\n          <a\n            type=\"button\"\n            href=\"https://en.wikipedia.org/wiki/Pomodoro_Technique\"\n            target=\"blank\"\n          >\n            Check it out\n          </a>\n        </DetailsSectionHeader>\n      </DetailsSection>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport GlobalStyles from './styles/global';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Routes />\n    <GlobalStyles />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}