{"version":3,"sources":["styles/global.ts","components/Header/styles.ts","components/Header/index.tsx","assets/dev-ilustration.svg","pages/Home/styles.ts","pages/Home/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","Container","styled","header","Content","div","Header","Timer","TimerMenu","TimerMenuItem","button","props","selected","DetailsSection","devIlustration","DetailsSectionHeader","options","name","minutes","Home","useState","setMinutes","seconds","setSeconds","started","setIsStarted","running","setIsRunnig","selectedOption","setSelectedOption","useEffect","a","Notification","alert","permission","requestPermission","handleNotificationRequest","icon","body","minutesInterval","setInterval","clearInterval","secondsInterval","option","find","_","index","map","optionIndex","onClick","String","padStart","type","state","Routes","path","exact","component","App","basename","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cfb06ee.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    outline: 0;\n  }\n\n  body {\n    color: #FFF;\n    -webkit-font-smoothing: antialised;\n  }\n\n  body, input, button {\n    font-family: 'Roboto', sans-serif;\n    font-size: 16px;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  ul, li {\n    list-style: none;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  display: flex;\n  height: 72px;\n  width: 100%;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  background: #202024;\n\n  h1 {\n    strong {\n      margin: 0 8px;\n    }\n    span {\n      font-weight: lighter;\n      color: #05f4b7;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: 1280px;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\n","import React from 'react';\n\nimport { Container, Content } from './styles';\n\nconst Header: React.FC = () => {\n  return (\n    <Container>\n      <Content>\n        <h1>\n          <span>&lt;</span>\n          <strong>focus</strong>\n          <span> /&gt;</span>\n        </h1>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/dev-ilustration.544f3d09.svg\";","import styled from 'styled-components';\nimport devIlustration from '../../assets/dev-ilustration.svg';\n\ninterface ITimerMenuItem {\n  selected?: Boolean;\n}\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  background: #202024;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Timer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-top: 100px;\n  max-width: 480px;\n  max-height: 360px;\n  width: 100%;\n  background: rgba(108, 108, 112, 0.3);\n  border-radius: 10px;\n\n  span {\n    font-size: 120px;\n  }\n\n  > button {\n    width: 200px;\n    margin-top: 25px;\n    padding: 15px;\n    width: 200px;\n    border-radius: 8px;\n    font-weight: bold;\n  }\n`;\n\nexport const TimerMenu = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 40px;\n`;\n\nexport const TimerMenuItem = styled.button<ITimerMenuItem>`\n  border: 0;\n  box-shadow: 0;\n  padding: 8px 15px;\n  color: #fff;\n  transition: background 0.2s;\n  & + button {\n    margin: 0 5px;\n  }\n  font-weight: ${props => (props.selected ? '700' : '500')};\n  border-radius: 4px;\n  background: ${props => (props.selected ? 'rgba(0, 0, 0, 0.15)' : 'none')};\n`;\n\nexport const DetailsSection = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 600px;\n  flex-direction: column;\n  margin-top: 72px;\n  max-width: 1280px;\n  padding: 0 40px;\n  background-image: url(${devIlustration});\n  background-size: 50%;\n  background-repeat: no-repeat;\n  background-position: bottom right;\n`;\n\nexport const DetailsSectionHeader = styled.div`\n  width: 100%;\n  max-width: 50%;\n  color: #202024;\n\n  h1 {\n    margin-bottom: 20px;\n  }\n\n  h2 {\n    margin: 40px 0 20px 0;\n    color: #6a6a71;\n  }\n\n  p {\n    color: #6a6a71;\n    text-align: justify;\n    font-size: 16px;\n    margin-bottom: 40px;\n  }\n\n  > button {\n    width: 100%;\n    max-width: 200px;\n    padding: 15px;\n    font-size: 16px;\n    border: 0;\n    border-radius: 10px;\n    background: #05f4b7;\n    color: #fff;\n    font-weight: 700;\n\n    &:hover {\n      background: #06ce9c;\n    }\n  }\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport Header from '../../components/Header';\n\nimport {\n  Container,\n  Content,\n  Timer,\n  TimerMenu,\n  TimerMenuItem,\n  DetailsSection,\n  DetailsSectionHeader,\n} from './styles';\n\nconst options = [\n  {\n    name: 'Pomodoro',\n    minutes: 25,\n  },\n  {\n    name: 'Short Break',\n    minutes: 5,\n  },\n  {\n    name: 'Long Break',\n    minutes: 15,\n  },\n];\n\nconst Home: React.FC = () => {\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [started, setIsStarted] = useState(false);\n  const [running, setIsRunnig] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(0);\n\n  useEffect(() => {\n    async function handleNotificationRequest() {\n      if (!Notification) {\n        alert('Esse browser não suporta notificações desktop');\n      }\n      if (Notification.permission !== 'granted') {\n        Notification.requestPermission();\n      }\n    }\n    handleNotificationRequest();\n  }, []);\n\n  useEffect(() => {\n    if (running) {\n      // if seconds get to 0, down minute\n      if (!seconds && !minutes) {\n        setIsRunnig(false);\n        const notification = new Notification('Time to take a break!', {\n          icon:\n            'https://i.pinimg.com/originals/00/cc/b6/00ccb6f59d1215f5666ad229af120e9f.png',\n          body: 'get some coffe...',\n        });\n\n        setMinutes(25);\n      }\n\n      if (!seconds) {\n        // if minutes get to 0 don't do nothing\n        // if (!minutes) return;\n        if (!minutes) {\n          return;\n        }\n\n        const minutesInterval = setInterval(() => {\n          setSeconds(59);\n          setMinutes(minutes - 1);\n        }, 1000);\n\n        return () => clearInterval(minutesInterval);\n      }\n\n      const secondsInterval = setInterval(() => {\n        setSeconds(seconds - 1);\n      }, 1000);\n\n      return () => clearInterval(secondsInterval);\n    }\n  }, [seconds, running, minutes]);\n\n  const controlsCountdown = () => {\n    if (started === false) {\n      setMinutes(state => state - 1);\n      setSeconds(59);\n      setIsStarted(true);\n    }\n    setIsRunnig(state => !state);\n  };\n\n  useEffect(() => {\n    const option = options.find((_, index) => index === selectedOption);\n\n    if (option) {\n      setMinutes(option.minutes);\n    }\n  }, [selectedOption]);\n\n  return (\n    <Container>\n      <Header />\n\n      <Content>\n        <Timer>\n          <TimerMenu>\n            {options.map((option, optionIndex) => (\n              <TimerMenuItem\n                selected={optionIndex === selectedOption}\n                onClick={() => setSelectedOption(optionIndex)}\n              >\n                {option.name}\n              </TimerMenuItem>\n            ))}\n            {/* <TimerMenuItem\n              selected={selectedOption === 'Pomodoro'}\n              onClick={() => setSelectedOption('Pomodoro')}\n            >\n              Pomodoro\n            </TimerMenuItem>\n            <TimerMenuItem\n              selected={selectedOption === 'Short Break'}\n              onClick={() => setSelectedOption('Short Break')}\n            >\n              Short Break\n            </TimerMenuItem>\n            <TimerMenuItem\n              selected={selectedOption === 'Long Break'}\n              onClick={() => setSelectedOption('Long Break')}\n            >\n              Long Break\n            </TimerMenuItem>{' '} */}\n          </TimerMenu>\n          <span>\n            {String(minutes).padStart(2, '0')}:\n            {String(seconds).padStart(2, '0')}\n          </span>\n          <button type=\"button\" onClick={controlsCountdown}>\n            {!running && minutes === 25 && 'START'}\n            {running && 'PAUSE'}\n            {running === false && minutes < 25 && 'RESUME'}\n          </button>\n        </Timer>\n      </Content>\n      <DetailsSection>\n        <DetailsSectionHeader>\n          <h1>Online Pomodoro Timer to boost your productivity</h1>\n          <h2>What is Pomodoro Technique?</h2>\n          <p>\n            The Pomodoro Technique is created by Francesco Cirillo for a more\n            productive way to work and study. The technique uses a timer to\n            break down work into intervals, traditionally 25 minutes in length,\n            separated by short breaks. Each interval is known as a pomodoro,\n            from the Italian word for tomato, after the tomato-shaped kitchen\n            timer that Cirillo used as a university student.\n          </p>\n          <button type=\"button\">Check it out</button>\n        </DetailsSectionHeader>\n      </DetailsSection>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport GlobalStyles from './styles/global';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <Routes />\n    <GlobalStyles />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}